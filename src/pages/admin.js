import React, { useState, useEffect } from "react";
import { io } from "socket.io-client";
import {
  Box,
  Button,
  TextField,
  Typography,
  List,
  ListItem,
  ListItemText,
  ListItemAvatar,
  Avatar,
  Stack,
  Grid,
  Card,
  Chip,
  Divider,
  Tab,
  Tabs,
} from "@mui/material";
import Snackbar from "@mui/material/Snackbar";
import Alert from "@mui/material/Alert";
import Head from "next/head";
import Layout from "@/components/Layout";

const socket = io(process.env.NEXT_PUBLIC_SOCKET_SERVER);

const AdminPage = () => {
  const [question, setQuestion] = useState("");
  const [answers, setAnswers] = useState([]);
  const [isGameActive, setIsGameActive] = useState(false);
  const [users, setUsers] = useState([]);
  const [tabIndex, setTabIndex] = useState(0);
  const [alertOpen, setAlertOpen] = useState(false);
  const [alertMessage, setAlertMessage] = useState("");
  const [alertSeverity, setAlertSeverity] = useState("");
  useEffect(() => {
    socket.on("answerReceived", (data) => {
      setAnswers((prev) => [...prev, data]);
    });
    socket.on("updateUsers", (updatedUsers) => {
      setUsers(updatedUsers);
    });
    return () => {
      socket.off("answerReceived");
    };
  }, []);

  const handleStartGame = () => {
    if (!question.trim()) {
      setAlertSeverity("error");
      setAlertMessage("โปรดกรอกคำถามที่ถูกต้อง");
      setAlertOpen(true);
      return;
    }
    socket.emit("startGame", question);
    setQuestion("");
    setIsGameActive(true);
    setAnswers([]);

    setAlertSeverity("success");
    setAlertMessage("ส่งคำถามเรียบร้อยแล้ว");
    setAlertOpen(true);
  };

  const handleStartGameMemory = () => {
    socket.emit("startGameMemory");
  };
  const handleTabChange = (event, newValue) => {
    socket.emit("gameActive", newValue);
    setTabIndex(newValue);
  };

  return (
    <>
      <Head>
        <title>Admin - FITS Game</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout username={"Admin"} users={users}>
        <Grid
          container
          spacing={1}
          display={"flex"}
          justifyContent={"center"}
          alignContent={"center"}
        >
          <Grid item xs={12} md={8}>
            <Card
              elevation={1}
              sx={{
                padding: "16px",
                marginBottom: "24px",
              }}
            >
              <Stack
                direction={"row"}
                sx={{ display: "flex", justifyContent: "space-between" }}
              >
                <Typography variant="body" gutterBottom sx={{}}>
                  แผงควบคุมผู้ดูแลระบบเกม
                </Typography>
                <Stack
                  display={"flex"}
                  justifyContent={"space-between"}
                  direction={"row"}
                  spacing={1}
                >
                  <Chip
                    label={`${users.length} ออนไลน์`}
                    variant="outlined"
                    sx={{
                      color: "white",
                      backgroundImage:
                        "linear-gradient(to right, #72BF78, #15B392)",
                    }}
                  />
                </Stack>
              </Stack>
              <Divider sx={{ mt: 1, mb: 1 }} />
              <Grid container spacing={2}>
                <Grid item xs={12} md={12}>
                  <Grid item xs={12}>
                    <Tabs
                      value={tabIndex}
                      onChange={handleTabChange}
                      indicatorColor="primary"
                      textColor="primary"
                    >
                      <Tab
                        sx={{ textTransform: "none" }}
                        label="เกมส์ตอบคำถาม"
                      />
                      <Tab
                        sx={{ textTransform: "none" }}
                        label="เกมส์ทดสอบความจำ"
                      />
                    </Tabs>
                  </Grid>
                </Grid>
                {tabIndex === 0 && (
                  <>
                    <Grid item xs={12} md={12}>
                      <Card
                        elevation={1}
                        style={{ padding: "16px", marginBottom: "24px" }}
                      >
                        <Typography variant="h6" gutterBottom>
                          ส่งคำถามใหม่
                        </Typography>
                        <TextField
                          label="ระบุคำถาม"
                          fullWidth
                          variant="outlined"
                          size="small"
                          value={question}
                          onChange={(e) => setQuestion(e.target.value)}
                        />
                        <Box mt={2}>
                          <Button
                            variant="contained"
                            color="primary"
                            size="small"
                            onClick={handleStartGame}
                            sx={{
                              backgroundImage:
                                "linear-gradient(to right, #1e3a8a, #3b82f6)",
                            }}
                          >
                            ส่ง
                          </Button>
                        </Box>
                      </Card>
                    </Grid>
                    <Grid item xs={12} md={12}>
                      <Typography variant="body" gutterBottom>
                        คำตอบของผู้เล่น
                      </Typography>
                      <Card elevation={1} style={{ padding: "16px" }}>
                        <List>
                          {answers.length > 0 ? (
                            answers.map((answer, index) => (
                              <ListItem key={index}>
                                <ListItemAvatar>
                                  <Avatar
                                    sx={{
                                      backgroundImage:
                                        "linear-gradient(to right, #1e3a8a, #3b82f6)",
                                      color: "white",
                                    }}
                                  >
                                    {index + 1}
                                  </Avatar>
                                </ListItemAvatar>
                                <ListItemText
                                  primary={`${answer.username}`}
                                  secondary={`${answer.answer}`}
                                />
                              </ListItem>
                            ))
                          ) : (
                            <Typography> ยังไม่ได้รับคำตอบ.</Typography>
                          )}
                        </List>
                      </Card>
                    </Grid>
                  </>
                )}

                {tabIndex === 1 && (
                  <>
                    <Grid item xs={12} md={6}>
                      <Card
                        elevation={1}
                        style={{ padding: "16px", marginBottom: "24px" }}
                      >
                        <Typography variant="h6" gutterBottom>
                          กดเพื่อเริ่มเกมส์ทันที
                        </Typography>
                        <Button
                          variant="contained"
                          color="primary"
                          size="small"
                          onClick={handleStartGameMemory}
                          sx={{
                            backgroundImage:
                              "linear-gradient(to right, #1e3a8a, #3b82f6)",
                          }}
                        >
                          เริ่มเกมส์ทดสอบความจำ
                        </Button>
                      </Card>
                    </Grid>
                  </>
                )}
              </Grid>
            </Card>
          </Grid>
        </Grid>
      </Layout>
      <Snackbar
        open={alertOpen}
        autoHideDuration={6000}
        onClose={() => setAlertOpen(false)}
        anchorOrigin={{ vertical: "top", horizontal: "center" }}
      >
        <Alert
          anchor
          vertical="top"
          onClose={() => setAlertOpen(false)}
          severity={alertSeverity}
          variant="filled"
          sx={{ width: "100%" }}
        >
          {alertMessage}
        </Alert>
      </Snackbar>
    </>
  );
};

export default AdminPage;
