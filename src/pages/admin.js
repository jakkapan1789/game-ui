import React, { useState, useEffect } from "react";
import { io } from "socket.io-client";
import {
  Box,
  Button,
  TextField,
  Typography,
  List,
  ListItem,
  ListItemText,
  Paper,
  ListItemAvatar,
  Avatar,
  Toolbar,
  IconButton,
  Drawer,
  Stack,
  Divider,
  Grid,
  Card,
} from "@mui/material";
import ImageIcon from "@mui/icons-material/Image";
import AppBar from "@mui/material/AppBar";
import MenuIcon from "@mui/icons-material/Menu";
import CloseIcon from "@mui/icons-material/Close";
import Head from "next/head";

const socket = io(process.env.NEXT_PUBLIC_SOCKET_SERVER);

const AdminPage = () => {
  const [isDrawerOpen, setIsDrawerOpen] = React.useState(false);
  const toggleDrawer = (open) => () => {
    setIsDrawerOpen(open);
  };

  const [question, setQuestion] = useState("");
  const [answers, setAnswers] = useState([]);
  const [isGameActive, setIsGameActive] = useState(false);
  const [users, setUsers] = useState([]);
  useEffect(() => {
    socket.on("answerReceived", (data) => {
      setAnswers((prev) => [...prev, data]);
    });
    socket.on("updateUsers", (updatedUsers) => {
      setUsers(updatedUsers);
    });
    return () => {
      socket.off("answerReceived");
    };
  }, []);

  const handleStartGame = () => {
    if (!question.trim()) {
      alert("Please enter a valid question.");
      return;
    }
    socket.emit("startGame", question);
    setQuestion("");
    setIsGameActive(true);
    setAnswers([]);
  };

  const handleLogout = () => {
    localStorage.removeItem("username");
    setUsername("");
    setIsLoggedIn(false);
    setIsDrawerOpen(false);
  };

  return (
    <>
      <Head>
        <title>Admin - FITS Game</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppBar
        component="nav"
        sx={{ backgroundImage: "linear-gradient(to right, #1e3a8a, #3b82f6)" }}
      >
        <Toolbar
          sx={{
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
          }}
        >
          <Typography
            variant="h6"
            sx={{
              fontWeight: "bold",
              color: "white",
            }}
          >
            FITS Game
          </Typography>
          <div style={{ display: "flex", alignItems: "center" }}>
            <Typography variant="body1" sx={{ marginRight: 2, color: "white" }}>
              Welcome, Admin
            </Typography>
            <Box sx={{ xs: "block", md: "none" }}>
              <IconButton color="inherit" onClick={toggleDrawer(true)}>
                <MenuIcon />
              </IconButton>
            </Box>
          </div>
        </Toolbar>
      </AppBar>
      <Box p={4}>
        <Toolbar />
        <Grid container display={"flex"} justifyContent={"center"}>
          <Grid item xs={12} md={6}>
            <Typography variant="h6" gutterBottom>
              แผงผู้ดูแลระบบ
            </Typography>

            <Card
              elevation={1}
              style={{ padding: "16px", marginBottom: "24px" }}
            >
              <Typography variant="h6" gutterBottom>
                ส่งคำถามใหม่
              </Typography>
              <TextField
                label="ระบุคำถาม"
                fullWidth
                variant="outlined"
                size="small"
                value={question}
                onChange={(e) => setQuestion(e.target.value)}
              />
              <Box mt={2}>
                <Button
                  variant="contained"
                  color="primary"
                  size="small"
                  onClick={handleStartGame}
                  sx={{
                    backgroundImage:
                      "linear-gradient(to right, #1e3a8a, #3b82f6)",
                  }}
                >
                  ส่ง
                </Button>
              </Box>
            </Card>

            <Typography variant="h5" gutterBottom>
              คำตอบของผู้เล่น
            </Typography>
            <Card elevation={1} style={{ padding: "16px" }}>
              <List>
                {answers.length > 0 ? (
                  answers.map((answer, index) => (
                    <ListItem key={index}>
                      <ListItemAvatar>
                        <Avatar
                          sx={{
                            backgroundImage:
                              "linear-gradient(to right, #1e3a8a, #3b82f6)",
                            color: "white",
                          }}
                        >
                          {index + 1}
                        </Avatar>
                      </ListItemAvatar>
                      <ListItemText
                        primary={`${answer.username}`}
                        secondary={`${answer.answer}`}
                      />
                    </ListItem>
                  ))
                ) : (
                  <Typography> ยังไม่ได้รับคำตอบ.</Typography>
                )}
              </List>
            </Card>
          </Grid>
        </Grid>
      </Box>
      <Drawer anchor="right" open={isDrawerOpen} onClose={toggleDrawer(false)}>
        <Box
          sx={{
            width: 300,
            padding: 2,
            backgroundColor: "background.paper",
            height: "100%",
            display: "flex",
            flexDirection: "column",
          }}
        >
          <Stack
            direction="row"
            justifyContent="space-between"
            alignItems="center"
            sx={{ marginBottom: 2 }}
          >
            <Typography variant="h6">Online Users ({users.length})</Typography>
            <IconButton color="inherit" onClick={toggleDrawer(false)}>
              <CloseIcon />
            </IconButton>
          </Stack>

          <Divider sx={{ marginBottom: 2 }} />

          <List sx={{ flexGrow: 1 }}>
            {users.length > 0 ? (
              users.map((user, index) => (
                <ListItem
                  key={index}
                  sx={{ display: "flex", alignItems: "center", gap: 1 }}
                >
                  <Box
                    sx={{
                      width: 8,
                      height: 8,
                      borderRadius: "50%",
                      backgroundColor: "green",
                    }}
                  />
                  <ListItemText primary={user} />
                </ListItem>
              ))
            ) : (
              <Typography
                variant="body2"
                color="textSecondary"
                sx={{ textAlign: "center" }}
              >
                No users online
              </Typography>
            )}
          </List>

          <Divider sx={{ marginTop: 2 }} />

          <Button
            variant="contained"
            fullWidth
            sx={{
              marginTop: 2,
              backgroundImage: "linear-gradient(to right, #1e3a8a, #3b82f6)",
            }}
            onClick={handleLogout}
          >
            ออกจากระบบ
          </Button>
        </Box>
      </Drawer>
    </>
  );
};

export default AdminPage;
